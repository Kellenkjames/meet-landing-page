@import '../abstracts/variables';

// TYPOGRAPHY MIXINS
@mixin text-preset-1 {
  font-weight: $font-weight-black;
  font-family: $font-primary, sans-serif;
  font-size: 6.4rem;
  line-height: 1.1;
  letter-spacing: 0;

  @include respond-to(sm) {
    font-size: 5rem;
  }
}

@mixin text-preset-2 {
  font-weight: $font-weight-black;
  font-family: $font-primary, sans-serif;
  font-size: 4rem;
  line-height: 1.2;
  letter-spacing: 0;

  @include respond-to(sm) {
    font-size: 3.5rem;
  }
}

@mixin text-preset-3 {
  font-weight: $font-weight-black;
  font-family: $font-primary, sans-serif;
  font-size: 1.6rem;
  line-height: 1.2;
  letter-spacing: 0.4rem;
}

@mixin text-preset-4 {
  font-weight: $font-weight-medium;
  font-family: $font-primary, sans-serif;
  font-size: 1.8rem;
  line-height: 1.6;
  letter-spacing: 0;
}

@mixin text-preset-5 {
  font-weight: $font-weight-black;
  font-family: $font-primary, sans-serif;
  font-size: 1.6rem;
  line-height: 1.5;
  letter-spacing: 0;
}

// BUTTON MIXIN
@mixin button-base {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: $space-200 $space-500;
  border-radius: $radius-pill;
  text-decoration: none;
  cursor: pointer;
  transition: background-color 0.3s ease-in-out;

  @include text-preset-5;
}

// FLEX UTILITIES
$flex-alignments: (
  center: center,
  start: flex-start,
  end: flex-end,
  between: space-between,
  around: space-around,
  evenly: space-evenly,
);

@mixin flex-row($justify: center, $align: center, $wrap: wrap) {
  display: flex;
  flex-direction: row;
  flex-wrap: $wrap;
  justify-content: map-get($flex-alignments, $justify);
  align-items: map-get($flex-alignments, $align);
}

@mixin flex-column($justify: center, $align: center, $wrap: nowrap) {
  display: flex;
  flex-direction: column;
  flex-wrap: $wrap;
  justify-content: map-get($flex-alignments, $justify);
  align-items: map-get($flex-alignments, $align);
}

@mixin flex-center {
  @include flex-row(center, center);
}

@mixin space-between-center {
  @include flex-row(between, center);
}

// RESPONSIVE BREAKPOINTS
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found.";
  }
}

@mixin respond-up($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found.";
  }
}
