@import '../abstracts/variables';

// TYPOGRAPHY

@mixin text-preset-1 {
  font-weight: $font-weight-black;
  font-family: inherit;
  font-size: 6.4rem; // 64px
  line-height: 110%;
  letter-spacing: 0;
  color: $slate-900;
}

@mixin text-preset-2 {
  font-weight: $font-weight-black;
  font-family: inherit;
  font-size: 4rem; // 40px
  line-height: 110%;
  letter-spacing: 0;
}

@mixin text-preset-3 {
  font-weight: $font-weight-black;
  font-family: inherit;
  font-size: 1.6rem; // 16px
  line-height: 110%;
  letter-spacing: 0.4rem;
}

@mixin text-preset-4 {
  font-weight: $font-weight-medium;
  font-family: inherit;
  font-size: 1.8rem; // 18px
  line-height: 110%;
  letter-spacing: 0;
  color: $slate-600;
}

@mixin text-preset-5 {
  font-weight: $font-weight-black;
  font-family: inherit;
  font-size: 1.6rem; // 16px
  line-height: 150%;
  letter-spacing: 0;
  color: $white;
}

// BUTTONS
@mixin button-base {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: $space-200 $space-500;
  border-radius: 2.9rem;
  text-decoration: none;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;

  @include text-preset-5;
}

// FLEXBOX UTILITIES

@mixin flex-row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
  align-items: center;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin space-between-center {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// RESPONSIVE BREAKPOINTS

// max-width: (mobile-first)
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: $breakpoint-xl) {
      @content;
    }
  }
}

// min-width (desktop-first)
@mixin respond-up($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  }
}

// SUB_ZONE CONTAINER
@mixin container {
  width: 100%;
  max-width: 1120px;
  margin-inline: auto;
  padding-inline: $space-200;

  @include respond-to(sm) {
    padding-inline: $space-100;
  }
}
